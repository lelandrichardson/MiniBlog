@using System.Data
@using MiniBlog.Includes.Data
@using MiniBlog.Objects
@{
    if(!IsPost)
    {
        Response.End(HTTP.MethodNotAllowed);
    }
    
    var r = GetJson();

    if (r.data == null)
    {
        Response.End(HTTP.BadRequest);
    }
    Insert(r.data);
}
@functions
{
    private const string InsertSql = @"
        INSERT INTO dbo.Setting (
            SettingName,
            SettingDescription,
            DataType,
            SettingValue
        ) VALUES (
            @SettingName,
            @SettingDescription,
            @DataType,
            @SettingValue
        )
    ";
    
    public void Insert(dynamic data)
    {
        using (var db = Db.GetOpenConnection())
        {
            db.Execute(InsertSql, new
                {
                    SettingName = (string)data.name,
                    SettingDescription = (string)data.description,
                    DataType = ((string) data.type)[0],
                    SettingValue = (string) data.value
                }, commandType: CommandType.Text);
        }
        JsonResult(new
                {
                    success = 1
                });
    }
}
